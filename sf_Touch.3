.TH "sf::Touch" 3 "Version .." "SFML" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sf::Touch \- Give access to the real-time state of the touches\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <SFML/Window/Touch\&.hpp>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBisDown\fP (unsigned int finger)"
.br
.RI "Check if a touch event is currently down\&. "
.ti -1c
.RI "static \fBVector2i\fP \fBgetPosition\fP (unsigned int finger)"
.br
.RI "Get the current position of a touch in desktop coordinates\&. "
.ti -1c
.RI "static \fBVector2i\fP \fBgetPosition\fP (unsigned int finger, const \fBWindowBase\fP &relativeTo)"
.br
.RI "Get the current position of a touch in window coordinates\&. "
.in -1c
.SH "Detailed Description"
.PP 
Give access to the real-time state of the touches\&. 

\fBsf::Touch\fP provides an interface to the state of the touches\&.
.PP
It only contains static functions, so it's not meant to be instantiated\&.
.PP
This class allows users to query the touches state at any time and directly, without having to deal with a window and its events\&. Compared to the TouchBegan, TouchMoved and TouchEnded events, \fBsf::Touch\fP can retrieve the state of the touches at any time (you don't need to store and update a boolean on your side in order to know if a touch is down), and you always get the real state of the touches, even if they happen when your window is out of focus and no event is triggered\&.
.PP
The getPosition function can be used to retrieve the current position of a touch\&. There are two versions: one that operates in global coordinates (relative to the desktop) and one that operates in window coordinates (relative to a specific window)\&.
.PP
Touches are identified by an index (the 'finger'), so that in multi-touch events, individual touches can be tracked correctly\&. As long as a finger touches the screen, it will keep the same index even if other fingers start or stop touching the screen in the meantime\&. As a consequence, active touch indices may not always be sequential (i\&.e\&. touch number 0 may be released while touch number 1 is still down)\&.
.PP
Usage example: 
.PP
.nf
if (sf::Touch::isDown(0))
{
    // touch 0 is down
}

// get global position of touch 1
sf::Vector2i globalPos = sf::Touch::getPosition(1);

// get position of touch 1 relative to a window
sf::Vector2i relativePos = sf::Touch::getPosition(1, window);

.fi
.PP
.PP
\fBSee also\fP
.RS 4
\fBsf::Joystick\fP, \fBsf::Keyboard\fP, \fBsf::Mouse\fP 
.RE
.PP

.PP
Definition at line \fB43\fP of file \fBTouch\&.hpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "static \fBVector2i\fP sf::Touch::getPosition (unsigned int finger)\fR [static]\fP"

.PP
Get the current position of a touch in desktop coordinates\&. This function returns the current touch position in global (desktop) coordinates\&.
.PP
\fBParameters\fP
.RS 4
\fIfinger\fP Finger index
.RE
.PP
\fBReturns\fP
.RS 4
Current position of \fIfinger\fP, or undefined if it's not down 
.RE
.PP

.SS "static \fBVector2i\fP sf::Touch::getPosition (unsigned int finger, const \fBWindowBase\fP & relativeTo)\fR [static]\fP"

.PP
Get the current position of a touch in window coordinates\&. This function returns the current touch position relative to the given window\&.
.PP
\fBParameters\fP
.RS 4
\fIfinger\fP Finger index 
.br
\fIrelativeTo\fP Reference window
.RE
.PP
\fBReturns\fP
.RS 4
Current position of \fIfinger\fP, or undefined if it's not down 
.RE
.PP

.SS "static bool sf::Touch::isDown (unsigned int finger)\fR [static]\fP"

.PP
Check if a touch event is currently down\&. 
.PP
\fBParameters\fP
.RS 4
\fIfinger\fP Finger index
.RE
.PP
\fBReturns\fP
.RS 4
True if \fIfinger\fP is currently touching the screen, false otherwise 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for SFML from the source code\&.
