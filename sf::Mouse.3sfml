.TH "sf::Mouse" 3sfml "2.6.1" "SFML" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sf::Mouse \- Give access to the real-time state of the mouse\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <SFML/Window/Mouse\&.hpp>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBButton\fP { \fBLeft\fP, \fBRight\fP, \fBMiddle\fP, \fBXButton1\fP, \fBXButton2\fP, \fBButtonCount\fP }"
.br
.RI "\fBMouse\fP buttons\&. "
.ti -1c
.RI "enum \fBWheel\fP { \fBVerticalWheel\fP, \fBHorizontalWheel\fP }"
.br
.RI "\fBMouse\fP wheels\&. "
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static bool \fBisButtonPressed\fP (\fBButton\fP button)"
.br
.RI "Check if a mouse button is pressed\&. "
.ti -1c
.RI "static \fBVector2i\fP \fBgetPosition\fP ()"
.br
.RI "Get the current position of the mouse in desktop coordinates\&. "
.ti -1c
.RI "static \fBVector2i\fP \fBgetPosition\fP (const \fBWindowBase\fP &relativeTo)"
.br
.RI "Get the current position of the mouse in window coordinates\&. "
.ti -1c
.RI "static void \fBsetPosition\fP (const \fBVector2i\fP &position)"
.br
.RI "Set the current position of the mouse in desktop coordinates\&. "
.ti -1c
.RI "static void \fBsetPosition\fP (const \fBVector2i\fP &position, const \fBWindowBase\fP &relativeTo)"
.br
.RI "Set the current position of the mouse in window coordinates\&. "
.in -1c
.SH "Detailed Description"
.PP 
Give access to the real-time state of the mouse\&. 

\fBsf::Mouse\fP provides an interface to the state of the mouse\&.
.PP
It only contains static functions (a single mouse is assumed), so it's not meant to be instantiated\&.
.PP
This class allows users to query the mouse state at any time and directly, without having to deal with a window and its events\&. Compared to the MouseMoved, MouseButtonPressed and MouseButtonReleased events, \fBsf::Mouse\fP can retrieve the state of the cursor and the buttons at any time (you don't need to store and update a boolean on your side in order to know if a button is pressed or released), and you always get the real state of the mouse, even if it is moved, pressed or released when your window is out of focus and no event is triggered\&.
.PP
The setPosition and getPosition functions can be used to change or retrieve the current position of the mouse pointer\&. There are two versions: one that operates in global coordinates (relative to the desktop) and one that operates in window coordinates (relative to a specific window)\&.
.PP
Usage example: 
.PP
.nf
if (sf::Mouse::isButtonPressed(sf::Mouse::Left))
{
    // left click\&.\&.\&.
}

// get global mouse position
sf::Vector2i position = sf::Mouse::getPosition();

// set mouse position relative to a window
sf::Mouse::setPosition(sf::Vector2i(100, 200), window);

.fi
.PP
.PP
\fBSee also\fP
.RS 4
\fBsf::Joystick\fP, \fBsf::Keyboard\fP, \fBsf::Touch\fP 
.RE
.PP

.PP
Definition at line \fB43\fP of file \fBMouse\&.hpp\fP\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBsf::Mouse::Button\fP"

.PP
\fBMouse\fP buttons\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fILeft \fP\fP
The left mouse button\&. 
.TP
\fB\fIRight \fP\fP
The right mouse button\&. 
.TP
\fB\fIMiddle \fP\fP
The middle (wheel) mouse button\&. 
.TP
\fB\fIXButton1 \fP\fP
The first extra mouse button\&. 
.TP
\fB\fIXButton2 \fP\fP
The second extra mouse button\&. 
.TP
\fB\fIButtonCount \fP\fP
Keep last -- the total number of mouse buttons\&. 
.PP
Definition at line \fB51\fP of file \fBMouse\&.hpp\fP\&.
.SS "enum \fBsf::Mouse::Wheel\fP"

.PP
\fBMouse\fP wheels\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIVerticalWheel \fP\fP
The vertical mouse wheel\&. 
.TP
\fB\fIHorizontalWheel \fP\fP
The horizontal mouse wheel\&. 
.PP
Definition at line \fB66\fP of file \fBMouse\&.hpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "static \fBVector2i\fP sf::Mouse::getPosition ()\fR [static]\fP"

.PP
Get the current position of the mouse in desktop coordinates\&. This function returns the global position of the mouse cursor on the desktop\&.
.PP
\fBReturns\fP
.RS 4
Current position of the mouse 
.RE
.PP

.SS "static \fBVector2i\fP sf::Mouse::getPosition (const \fBWindowBase\fP & relativeTo)\fR [static]\fP"

.PP
Get the current position of the mouse in window coordinates\&. This function returns the current position of the mouse cursor, relative to the given window\&.
.PP
\fBParameters\fP
.RS 4
\fIrelativeTo\fP Reference window
.RE
.PP
\fBReturns\fP
.RS 4
Current position of the mouse 
.RE
.PP

.SS "static bool sf::Mouse::isButtonPressed (\fBButton\fP button)\fR [static]\fP"

.PP
Check if a mouse button is pressed\&. 
.PP
\fBWarning\fP
.RS 4
Checking the state of buttons \fBMouse::XButton1\fP and \fBMouse::XButton2\fP is not supported on Linux with X11\&.
.RE
.PP
\fBParameters\fP
.RS 4
\fIbutton\fP Button to check
.RE
.PP
\fBReturns\fP
.RS 4
True if the button is pressed, false otherwise 
.RE
.PP

.SS "static void sf::Mouse::setPosition (const \fBVector2i\fP & position)\fR [static]\fP"

.PP
Set the current position of the mouse in desktop coordinates\&. This function sets the global position of the mouse cursor on the desktop\&.
.PP
\fBParameters\fP
.RS 4
\fIposition\fP New position of the mouse 
.RE
.PP

.SS "static void sf::Mouse::setPosition (const \fBVector2i\fP & position, const \fBWindowBase\fP & relativeTo)\fR [static]\fP"

.PP
Set the current position of the mouse in window coordinates\&. This function sets the current position of the mouse cursor, relative to the given window\&.
.PP
\fBParameters\fP
.RS 4
\fIposition\fP New position of the mouse 
.br
\fIrelativeTo\fP Reference window 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for SFML from the source code\&.
