.TH "sf::Clock" 3 "Version .." "SFML" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sf::Clock \- Utility class that measures the elapsed time\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <SFML/System/Clock\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBClock\fP ()"
.br
.RI "Default constructor\&. "
.ti -1c
.RI "\fBTime\fP \fBgetElapsedTime\fP () const"
.br
.RI "Get the elapsed time\&. "
.ti -1c
.RI "\fBTime\fP \fBrestart\fP ()"
.br
.RI "Restart the clock\&. "
.in -1c
.SH "Detailed Description"
.PP 
Utility class that measures the elapsed time\&. 

\fBsf::Clock\fP is a lightweight class for measuring time\&.
.PP
Its provides the most precise time that the underlying OS can achieve (generally microseconds or nanoseconds)\&. It also ensures monotonicity, which means that the returned time can never go backward, even if the system time is changed\&.
.PP
Usage example: 
.PP
.nf
sf::Clock clock;
\&.\&.\&.
Time time1 = clock\&.getElapsedTime();
\&.\&.\&.
Time time2 = clock\&.restart();

.fi
.PP
.PP
The \fBsf::Time\fP value returned by the clock can then be converted to a number of seconds, milliseconds or even microseconds\&.
.PP
\fBSee also\fP
.RS 4
\fBsf::Time\fP 
.RE
.PP

.PP
Definition at line \fB41\fP of file \fBClock\&.hpp\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "sf::Clock::Clock ()"

.PP
Default constructor\&. The clock starts automatically after being constructed\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBTime\fP sf::Clock::getElapsedTime () const"

.PP
Get the elapsed time\&. This function returns the time elapsed since the last call to \fBrestart()\fP (or the construction of the instance if \fBrestart()\fP has not been called)\&.
.PP
\fBReturns\fP
.RS 4
\fBTime\fP elapsed 
.RE
.PP

.SS "\fBTime\fP sf::Clock::restart ()"

.PP
Restart the clock\&. This function puts the time counter back to zero\&. It also returns the time elapsed since the clock was started\&.
.PP
\fBReturns\fP
.RS 4
\fBTime\fP elapsed 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for SFML from the source code\&.
