.TH "sf::SoundSource" 3 "Version .." "SFML" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sf::SoundSource \- Base class defining a sound's properties\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <SFML/Audio/SoundSource\&.hpp>\fP
.PP
Inherits \fBsf::AlResource\fP\&.
.PP
Inherited by \fBsf::Sound\fP, and \fBsf::SoundStream\fP\&.
.SS "Public Types"

.in +1c
.ti -1c
.RI "enum \fBStatus\fP { \fBStopped\fP, \fBPaused\fP, \fBPlaying\fP }"
.br
.RI "Enumeration of the sound source states\&. "
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSoundSource\fP (const \fBSoundSource\fP &copy)"
.br
.RI "Copy constructor\&. "
.ti -1c
.RI "virtual \fB~SoundSource\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "void \fBsetPitch\fP (float pitch)"
.br
.RI "Set the pitch of the sound\&. "
.ti -1c
.RI "void \fBsetVolume\fP (float volume)"
.br
.RI "Set the volume of the sound\&. "
.ti -1c
.RI "void \fBsetPosition\fP (float x, float y, float z)"
.br
.RI "Set the 3D position of the sound in the audio scene\&. "
.ti -1c
.RI "void \fBsetPosition\fP (const \fBVector3f\fP &position)"
.br
.RI "Set the 3D position of the sound in the audio scene\&. "
.ti -1c
.RI "void \fBsetRelativeToListener\fP (bool relative)"
.br
.RI "Make the sound's position relative to the listener or absolute\&. "
.ti -1c
.RI "void \fBsetMinDistance\fP (float distance)"
.br
.RI "Set the minimum distance of the sound\&. "
.ti -1c
.RI "void \fBsetAttenuation\fP (float attenuation)"
.br
.RI "Set the attenuation factor of the sound\&. "
.ti -1c
.RI "float \fBgetPitch\fP () const"
.br
.RI "Get the pitch of the sound\&. "
.ti -1c
.RI "float \fBgetVolume\fP () const"
.br
.RI "Get the volume of the sound\&. "
.ti -1c
.RI "\fBVector3f\fP \fBgetPosition\fP () const"
.br
.RI "Get the 3D position of the sound in the audio scene\&. "
.ti -1c
.RI "bool \fBisRelativeToListener\fP () const"
.br
.RI "Tell whether the sound's position is relative to the listener or is absolute\&. "
.ti -1c
.RI "float \fBgetMinDistance\fP () const"
.br
.RI "Get the minimum distance of the sound\&. "
.ti -1c
.RI "float \fBgetAttenuation\fP () const"
.br
.RI "Get the attenuation factor of the sound\&. "
.ti -1c
.RI "\fBSoundSource\fP & \fBoperator=\fP (const \fBSoundSource\fP &right)"
.br
.RI "Overload of assignment operator\&. "
.ti -1c
.RI "virtual void \fBplay\fP ()=0"
.br
.RI "Start or resume playing the sound source\&. "
.ti -1c
.RI "virtual void \fBpause\fP ()=0"
.br
.RI "Pause the sound source\&. "
.ti -1c
.RI "virtual void \fBstop\fP ()=0"
.br
.RI "Stop playing the sound source\&. "
.ti -1c
.RI "virtual \fBStatus\fP \fBgetStatus\fP () const"
.br
.RI "Get the current status of the sound (stopped, paused, playing) "
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBSoundSource\fP ()"
.br
.RI "Default constructor\&. "
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "unsigned int \fBm_source\fP"
.br
.RI "OpenAL source identifier\&. "
.in -1c
.SH "Detailed Description"
.PP 
Base class defining a sound's properties\&. 

\fBsf::SoundSource\fP is not meant to be used directly, it only serves as a common base for all audio objects that can live in the audio environment\&.
.PP
It defines several properties for the sound: pitch, volume, position, attenuation, etc\&. All of them can be changed at any time with no impact on performances\&.
.PP
\fBSee also\fP
.RS 4
\fBsf::Sound\fP, \fBsf::SoundStream\fP 
.RE
.PP

.PP
Definition at line \fB42\fP of file \fBSoundSource\&.hpp\fP\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBsf::SoundSource::Status\fP"

.PP
Enumeration of the sound source states\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIStopped \fP\fP
\fBSound\fP is not playing\&. 
.TP
\fB\fIPaused \fP\fP
\fBSound\fP is paused\&. 
.TP
\fB\fIPlaying \fP\fP
\fBSound\fP is playing\&. 
.PP
Definition at line \fB50\fP of file \fBSoundSource\&.hpp\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "sf::SoundSource::SoundSource (const \fBSoundSource\fP & copy)"

.PP
Copy constructor\&. 
.PP
\fBParameters\fP
.RS 4
\fIcopy\fP Instance to copy 
.RE
.PP

.SS "virtual sf::SoundSource::~SoundSource ()\fR [virtual]\fP"

.PP
Destructor\&. 
.SS "sf::SoundSource::SoundSource ()\fR [protected]\fP"

.PP
Default constructor\&. This constructor is meant to be called by derived classes only\&. 
.SH "Member Function Documentation"
.PP 
.SS "float sf::SoundSource::getAttenuation () const"

.PP
Get the attenuation factor of the sound\&. 
.PP
\fBReturns\fP
.RS 4
Attenuation factor of the sound
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetAttenuation\fP, \fBgetMinDistance\fP 
.RE
.PP

.SS "float sf::SoundSource::getMinDistance () const"

.PP
Get the minimum distance of the sound\&. 
.PP
\fBReturns\fP
.RS 4
Minimum distance of the sound
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetMinDistance\fP, \fBgetAttenuation\fP 
.RE
.PP

.SS "float sf::SoundSource::getPitch () const"

.PP
Get the pitch of the sound\&. 
.PP
\fBReturns\fP
.RS 4
Pitch of the sound
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetPitch\fP 
.RE
.PP

.SS "\fBVector3f\fP sf::SoundSource::getPosition () const"

.PP
Get the 3D position of the sound in the audio scene\&. 
.PP
\fBReturns\fP
.RS 4
Position of the sound
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetPosition\fP 
.RE
.PP

.SS "virtual \fBStatus\fP sf::SoundSource::getStatus () const\fR [virtual]\fP"

.PP
Get the current status of the sound (stopped, paused, playing) 
.PP
\fBReturns\fP
.RS 4
Current status of the sound 
.RE
.PP

.PP
Reimplemented in \fBsf::Sound\fP, and \fBsf::SoundStream\fP\&.
.SS "float sf::SoundSource::getVolume () const"

.PP
Get the volume of the sound\&. 
.PP
\fBReturns\fP
.RS 4
Volume of the sound, in the range [0, 100]
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetVolume\fP 
.RE
.PP

.SS "bool sf::SoundSource::isRelativeToListener () const"

.PP
Tell whether the sound's position is relative to the listener or is absolute\&. 
.PP
\fBReturns\fP
.RS 4
True if the position is relative, false if it's absolute
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetRelativeToListener\fP 
.RE
.PP

.SS "\fBSoundSource\fP & sf::SoundSource::operator= (const \fBSoundSource\fP & right)"

.PP
Overload of assignment operator\&. 
.PP
\fBParameters\fP
.RS 4
\fIright\fP Instance to assign
.RE
.PP
\fBReturns\fP
.RS 4
Reference to self 
.RE
.PP

.SS "virtual void sf::SoundSource::pause ()\fR [pure virtual]\fP"

.PP
Pause the sound source\&. This function pauses the source if it was playing, otherwise (source already paused or stopped) it has no effect\&.
.PP
\fBSee also\fP
.RS 4
\fBplay\fP, \fBstop\fP 
.RE
.PP

.PP
Implemented in \fBsf::Sound\fP, and \fBsf::SoundStream\fP\&.
.SS "virtual void sf::SoundSource::play ()\fR [pure virtual]\fP"

.PP
Start or resume playing the sound source\&. This function starts the source if it was stopped, resumes it if it was paused, and restarts it from the beginning if it was already playing\&.
.PP
\fBSee also\fP
.RS 4
\fBpause\fP, \fBstop\fP 
.RE
.PP

.PP
Implemented in \fBsf::Sound\fP, and \fBsf::SoundStream\fP\&.
.SS "void sf::SoundSource::setAttenuation (float attenuation)"

.PP
Set the attenuation factor of the sound\&. The attenuation is a multiplicative factor which makes the sound more or less loud according to its distance from the listener\&. An attenuation of 0 will produce a non-attenuated sound, i\&.e\&. its volume will always be the same whether it is heard from near or from far\&. On the other hand, an attenuation value such as 100 will make the sound fade out very quickly as it gets further from the listener\&. The default value of the attenuation is 1\&.
.PP
\fBParameters\fP
.RS 4
\fIattenuation\fP New attenuation factor of the sound
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetAttenuation\fP, \fBsetMinDistance\fP 
.RE
.PP

.SS "void sf::SoundSource::setMinDistance (float distance)"

.PP
Set the minimum distance of the sound\&. The 'minimum distance' of a sound is the maximum distance at which it is heard at its maximum volume\&. Further than the minimum distance, it will start to fade out according to its attenuation factor\&. A value of 0 ('inside the head
of the listener') is an invalid value and is forbidden\&. The default value of the minimum distance is 1\&.
.PP
\fBParameters\fP
.RS 4
\fIdistance\fP New minimum distance of the sound
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetMinDistance\fP, \fBsetAttenuation\fP 
.RE
.PP

.SS "void sf::SoundSource::setPitch (float pitch)"

.PP
Set the pitch of the sound\&. The pitch represents the perceived fundamental frequency of a sound; thus you can make a sound more acute or grave by changing its pitch\&. A side effect of changing the pitch is to modify the playing speed of the sound as well\&. The default value for the pitch is 1\&.
.PP
\fBParameters\fP
.RS 4
\fIpitch\fP New pitch to apply to the sound
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetPitch\fP 
.RE
.PP

.SS "void sf::SoundSource::setPosition (const \fBVector3f\fP & position)"

.PP
Set the 3D position of the sound in the audio scene\&. Only sounds with one channel (mono sounds) can be spatialized\&. The default position of a sound is (0, 0, 0)\&.
.PP
\fBParameters\fP
.RS 4
\fIposition\fP Position of the sound in the scene
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetPosition\fP 
.RE
.PP

.SS "void sf::SoundSource::setPosition (float x, float y, float z)"

.PP
Set the 3D position of the sound in the audio scene\&. Only sounds with one channel (mono sounds) can be spatialized\&. The default position of a sound is (0, 0, 0)\&.
.PP
\fBParameters\fP
.RS 4
\fIx\fP X coordinate of the position of the sound in the scene 
.br
\fIy\fP Y coordinate of the position of the sound in the scene 
.br
\fIz\fP Z coordinate of the position of the sound in the scene
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetPosition\fP 
.RE
.PP

.SS "void sf::SoundSource::setRelativeToListener (bool relative)"

.PP
Make the sound's position relative to the listener or absolute\&. Making a sound relative to the listener will ensure that it will always be played the same way regardless of the position of the listener\&. This can be useful for non-spatialized sounds, sounds that are produced by the listener, or sounds attached to it\&. The default value is false (position is absolute)\&.
.PP
\fBParameters\fP
.RS 4
\fIrelative\fP True to set the position relative, false to set it absolute
.RE
.PP
\fBSee also\fP
.RS 4
\fBisRelativeToListener\fP 
.RE
.PP

.SS "void sf::SoundSource::setVolume (float volume)"

.PP
Set the volume of the sound\&. The volume is a value between 0 (mute) and 100 (full volume)\&. The default value for the volume is 100\&.
.PP
\fBParameters\fP
.RS 4
\fIvolume\fP Volume of the sound
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetVolume\fP 
.RE
.PP

.SS "virtual void sf::SoundSource::stop ()\fR [pure virtual]\fP"

.PP
Stop playing the sound source\&. This function stops the source if it was playing or paused, and does nothing if it was already stopped\&. It also resets the playing position (unlike \fBpause()\fP)\&.
.PP
\fBSee also\fP
.RS 4
\fBplay\fP, \fBpause\fP 
.RE
.PP

.PP
Implemented in \fBsf::Sound\fP, and \fBsf::SoundStream\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "unsigned int sf::SoundSource::m_source\fR [protected]\fP"

.PP
OpenAL source identifier\&. 
.PP
Definition at line \fB309\fP of file \fBSoundSource\&.hpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for SFML from the source code\&.
