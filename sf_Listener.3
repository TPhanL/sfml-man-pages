.TH "sf::Listener" 3 "Version .." "SFML" \" -*- nroff -*-
.ad l
.nh
.SH NAME
sf::Listener \- The audio listener is the point in the scene from where all the sounds are heard\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <SFML/Audio/Listener\&.hpp>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static void \fBsetGlobalVolume\fP (float volume)"
.br
.RI "Change the global volume of all the sounds and musics\&. "
.ti -1c
.RI "static float \fBgetGlobalVolume\fP ()"
.br
.RI "Get the current value of the global volume\&. "
.ti -1c
.RI "static void \fBsetPosition\fP (float x, float y, float z)"
.br
.RI "Set the position of the listener in the scene\&. "
.ti -1c
.RI "static void \fBsetPosition\fP (const \fBVector3f\fP &position)"
.br
.RI "Set the position of the listener in the scene\&. "
.ti -1c
.RI "static \fBVector3f\fP \fBgetPosition\fP ()"
.br
.RI "Get the current position of the listener in the scene\&. "
.ti -1c
.RI "static void \fBsetDirection\fP (float x, float y, float z)"
.br
.RI "Set the forward vector of the listener in the scene\&. "
.ti -1c
.RI "static void \fBsetDirection\fP (const \fBVector3f\fP &direction)"
.br
.RI "Set the forward vector of the listener in the scene\&. "
.ti -1c
.RI "static \fBVector3f\fP \fBgetDirection\fP ()"
.br
.RI "Get the current forward vector of the listener in the scene\&. "
.ti -1c
.RI "static void \fBsetUpVector\fP (float x, float y, float z)"
.br
.RI "Set the upward vector of the listener in the scene\&. "
.ti -1c
.RI "static void \fBsetUpVector\fP (const \fBVector3f\fP &upVector)"
.br
.RI "Set the upward vector of the listener in the scene\&. "
.ti -1c
.RI "static \fBVector3f\fP \fBgetUpVector\fP ()"
.br
.RI "Get the current upward vector of the listener in the scene\&. "
.in -1c
.SH "Detailed Description"
.PP 
The audio listener is the point in the scene from where all the sounds are heard\&. 

The audio listener defines the global properties of the audio environment, it defines where and how sounds and musics are heard\&.
.PP
If \fBsf::View\fP is the eyes of the user, then \fBsf::Listener\fP is his ears (by the way, they are often linked together -- same position, orientation, etc\&.)\&.
.PP
\fBsf::Listener\fP is a simple interface, which allows to setup the listener in the 3D audio environment (position, direction and up vector), and to adjust the global volume\&.
.PP
Because the listener is unique in the scene, \fBsf::Listener\fP only contains static functions and doesn't have to be instantiated\&.
.PP
Usage example: 
.PP
.nf
// Move the listener to the position (1, 0, \-5)
sf::Listener::setPosition(1, 0, \-5);

// Make it face the right axis (1, 0, 0)
sf::Listener::setDirection(1, 0, 0);

// Reduce the global volume
sf::Listener::setGlobalVolume(50);

.fi
.PP
 
.PP
Definition at line \fB42\fP of file \fBListener\&.hpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "static \fBVector3f\fP sf::Listener::getDirection ()\fR [static]\fP"

.PP
Get the current forward vector of the listener in the scene\&. 
.PP
\fBReturns\fP
.RS 4
\fBListener\fP's forward vector (not normalized)
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetDirection\fP 
.RE
.PP

.SS "static float sf::Listener::getGlobalVolume ()\fR [static]\fP"

.PP
Get the current value of the global volume\&. 
.PP
\fBReturns\fP
.RS 4
Current global volume, in the range [0, 100]
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetGlobalVolume\fP 
.RE
.PP

.SS "static \fBVector3f\fP sf::Listener::getPosition ()\fR [static]\fP"

.PP
Get the current position of the listener in the scene\&. 
.PP
\fBReturns\fP
.RS 4
\fBListener\fP's position
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetPosition\fP 
.RE
.PP

.SS "static \fBVector3f\fP sf::Listener::getUpVector ()\fR [static]\fP"

.PP
Get the current upward vector of the listener in the scene\&. 
.PP
\fBReturns\fP
.RS 4
\fBListener\fP's upward vector (not normalized)
.RE
.PP
\fBSee also\fP
.RS 4
\fBsetUpVector\fP 
.RE
.PP

.SS "static void sf::Listener::setDirection (const \fBVector3f\fP & direction)\fR [static]\fP"

.PP
Set the forward vector of the listener in the scene\&. The direction (also called 'at vector') is the vector pointing forward from the listener's perspective\&. Together with the up vector, it defines the 3D orientation of the listener in the scene\&. The direction vector doesn't have to be normalized\&. The default listener's direction is (0, 0, -1)\&.
.PP
\fBParameters\fP
.RS 4
\fIdirection\fP New listener's direction
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetDirection\fP, \fBsetUpVector\fP, \fBsetPosition\fP 
.RE
.PP

.SS "static void sf::Listener::setDirection (float x, float y, float z)\fR [static]\fP"

.PP
Set the forward vector of the listener in the scene\&. The direction (also called 'at vector') is the vector pointing forward from the listener's perspective\&. Together with the up vector, it defines the 3D orientation of the listener in the scene\&. The direction vector doesn't have to be normalized\&. The default listener's direction is (0, 0, -1)\&.
.PP
\fBParameters\fP
.RS 4
\fIx\fP X coordinate of the listener's direction 
.br
\fIy\fP Y coordinate of the listener's direction 
.br
\fIz\fP Z coordinate of the listener's direction
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetDirection\fP, \fBsetUpVector\fP, \fBsetPosition\fP 
.RE
.PP

.SS "static void sf::Listener::setGlobalVolume (float volume)\fR [static]\fP"

.PP
Change the global volume of all the sounds and musics\&. The volume is a number between 0 and 100; it is combined with the individual volume of each sound / music\&. The default value for the volume is 100 (maximum)\&.
.PP
\fBParameters\fP
.RS 4
\fIvolume\fP New global volume, in the range [0, 100]
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetGlobalVolume\fP 
.RE
.PP

.SS "static void sf::Listener::setPosition (const \fBVector3f\fP & position)\fR [static]\fP"

.PP
Set the position of the listener in the scene\&. The default listener's position is (0, 0, 0)\&.
.PP
\fBParameters\fP
.RS 4
\fIposition\fP New listener's position
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetPosition\fP, \fBsetDirection\fP 
.RE
.PP

.SS "static void sf::Listener::setPosition (float x, float y, float z)\fR [static]\fP"

.PP
Set the position of the listener in the scene\&. The default listener's position is (0, 0, 0)\&.
.PP
\fBParameters\fP
.RS 4
\fIx\fP X coordinate of the listener's position 
.br
\fIy\fP Y coordinate of the listener's position 
.br
\fIz\fP Z coordinate of the listener's position
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetPosition\fP, \fBsetDirection\fP 
.RE
.PP

.SS "static void sf::Listener::setUpVector (const \fBVector3f\fP & upVector)\fR [static]\fP"

.PP
Set the upward vector of the listener in the scene\&. The up vector is the vector that points upward from the listener's perspective\&. Together with the direction, it defines the 3D orientation of the listener in the scene\&. The up vector doesn't have to be normalized\&. The default listener's up vector is (0, 1, 0)\&. It is usually not necessary to change it, especially in 2D scenarios\&.
.PP
\fBParameters\fP
.RS 4
\fIupVector\fP New listener's up vector
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetUpVector\fP, \fBsetDirection\fP, \fBsetPosition\fP 
.RE
.PP

.SS "static void sf::Listener::setUpVector (float x, float y, float z)\fR [static]\fP"

.PP
Set the upward vector of the listener in the scene\&. The up vector is the vector that points upward from the listener's perspective\&. Together with the direction, it defines the 3D orientation of the listener in the scene\&. The up vector doesn't have to be normalized\&. The default listener's up vector is (0, 1, 0)\&. It is usually not necessary to change it, especially in 2D scenarios\&.
.PP
\fBParameters\fP
.RS 4
\fIx\fP X coordinate of the listener's up vector 
.br
\fIy\fP Y coordinate of the listener's up vector 
.br
\fIz\fP Z coordinate of the listener's up vector
.RE
.PP
\fBSee also\fP
.RS 4
\fBgetUpVector\fP, \fBsetDirection\fP, \fBsetPosition\fP 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for SFML from the source code\&.
